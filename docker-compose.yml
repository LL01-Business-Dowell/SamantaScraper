version: '3.8'

services:
  backend:
    build: ./backend
    container_name: backend_container
    ports:
      - "8000:8000"
    restart: always
    volumes:
      - ./backend:/usr/src/app
    environment:
      - PYTHONUNBUFFERED=1
      - INSCRIBER_URL=http://inscriber:8002/api/geo-query-cube/
      - CRUD_BASE_URL=https://datacube.uxlivinglab.online/
      - CRUD_COORDS_PATH=/api/crud
      - CRUD_RESULTS_PATH=/api/crud
      - CRUD_API_KEY=sk_test_lbV1EV3-mQJ5VKlDzJHHa0xywsdEZGhAFPk6EPwce8k
      - DATABASE_ID=690346e64b13cf4d1be78d89
    shm_size: 2gb
    networks:
      - queue-net

  inscriber:
    build: ./inscribing_proj
    container_name: inscriber_container
    ports:
      - "8002:8002"
    env_file:
      - ./inscribing_proj/dev.env
    restart: always
    volumes:
      - ./inscribing_proj:/usr/src/app
    environment:
    # - PYTHONUNBUFFERED=1
      API_KEY: ${API_KEY}
      BASE_DATACUBE_URL: ${BASE_DATACUBE_URL}
      DATABASE_ID: ${DATABASE_ID}
      INDEX_COLLECTION_NAME: ${INDEX_COLLECTION_NAME}
      DATABASE_NAME: ${DATABASE_NAME}
      shm_size: 2gb
      
    networks:
      - queue-net

  frontend:
    build: ./frontend
    container_name: frontend_container
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/usr/src/app
    depends_on:
      - backend
    environment:
      - VITE_API_URL=https://map.uxlivinglab.online/api
    restart: always
    networks:
      - queue-net

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx_scraper
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt/live/map.uxlivinglab.online/fullchain.pem:/etc/letsencrypt/live/map.uxlivinglab.online/fullchain.pem:ro
      - /etc/letsencrypt/live/map.uxlivinglab.online/privkey.pem:/etc/letsencrypt/live/map.uxlivinglab.online/privkey.pem:ro
      - ./frontend:/home/SamantaScraper/frontend:ro
    restart: always
    depends_on:
      - backend
      - frontend
    networks:
      - queue-net



networks:
  queue-net:
    driver: bridge
